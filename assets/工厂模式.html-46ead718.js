import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as a,c as i,a as r}from"./app-a622d8a0.js";const t={},h=r('<h1 id="工厂模式" tabindex="-1"><a class="header-anchor" href="#工厂模式" aria-hidden="true">#</a> 工厂模式</h1><h3 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h3><p>在本文章中，主要包含以下几个方面的主题：</p><ol><li>了解简单工厂设计模式；</li><li>讨论工厂方法和抽象工厂方法及其差异；</li><li>利用Python代码实现真实场景；</li><li>讨论模式的优缺点并进行相应的比较。</li></ol><h3 id="了解工厂模式" tabindex="-1"><a class="header-anchor" href="#了解工厂模式" aria-hidden="true">#</a> 了解工厂模式</h3><p>在面向对象编程中，术语“工厂”表示一个负责创建其他类型对象的类。</p>',6),o=[h];function c(n,d){return a(),i("div",null,o)}const _=e(t,[["render",c],["__file","工厂模式.html.vue"]]);export{_ as default};
