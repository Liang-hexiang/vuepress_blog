const e=JSON.parse('{"key":"v-4f323a05","path":"/posts/design_pattern/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F.html","title":"单例模式","lang":"zh-CN","frontmatter":{"icon":"fa-brands fa-python","date":"2024-01-03T00:00:00.000Z","cover":"https://img.tucang.cc/api/image/show/6c8acb93bd0fc9dd85006746d572df8f","category":["python"],"tag":["设计模式","python"]},"headers":[{"level":2,"title":"单例模式结构","slug":"单例模式结构","link":"#单例模式结构","children":[]},{"level":2,"title":"单例模式的Python实现","slug":"单例模式的python实现","link":"#单例模式的python实现","children":[{"level":3,"title":"1. 普通单例模式","slug":"_1-普通单例模式","link":"#_1-普通单例模式","children":[]},{"level":3,"title":"2. 使用装饰器实现单例模式","slug":"_2-使用装饰器实现单例模式","link":"#_2-使用装饰器实现单例模式","children":[]},{"level":3,"title":"3. 单态模式(单例模式的一种)","slug":"_3-单态模式-单例模式的一种","link":"#_3-单态模式-单例模式的一种","children":[]},{"level":3,"title":"4. 单例和元类","slug":"_4-单例和元类","link":"#_4-单例和元类","children":[]},{"level":3,"title":"5. 单例模式的缺点","slug":"_5-单例模式的缺点","link":"#_5-单例模式的缺点","children":[]}]}],"git":{"createdTime":1732863766000,"updatedTime":1732863766000,"contributors":[{"name":"lianghexiang","email":"lhx110396@163.com","commits":1}]},"readingTime":{"minutes":7.84,"words":2351},"filePathRelative":"posts/design_pattern/单例模式.md","localizedDate":"2024年1月3日","excerpt":"<h1> 单例模式</h1>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">单例模式</p>\\n<p>单例模式是一种创建型设计模式， 让你能够保证一个类只有一个实例， 并提供一个访问该实例的全局节点。</p>\\n</div>\\n<h2> 单例模式结构</h2>\\n<figure><img src=\\"https://raw.githubusercontent.com/lianghexiang/picgo-picture/main/vuepress/2024-04-26-bWP3E8.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>"}');export{e as data};
