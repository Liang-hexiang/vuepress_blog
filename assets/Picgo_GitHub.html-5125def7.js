import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as p,a as t}from"./app-5ab4dc08.js";const a={},o=t('<h1 id="picgo" tabindex="-1"><a class="header-anchor" href="#picgo" aria-hidden="true">#</a> Picgo</h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>这篇文章主要介绍在💻<code>windows</code>系统下安装PicGo并且在🇬🇭 GitHub上创建仓库来做我们自己的个人图床。</p><p>首先，什么是 <code>Picgo</code>？</p><p>picgo网站地址：https://picgo.github.io/PicGo-Doc/zh/guide/#%E7%89%B9%E8%89%B2%E5%8A%9F%E8%83%BD</p><p><strong>PicGo: 一个用于快速上传图片并获取图片 URL 链接的工具</strong></p><p>呈上GitHub下载地址：https://github.com/Molunerfinn/PicGo/releases</p><p>也可以在picgo网站中找到各种下载原，比如GitHub的，腾讯的，以及别的源，哪个快用哪个。</p><p><strong>应用截图</strong></p><p><img src="https://raw.githubusercontent.com/Molunerfinn/test/master/picgo/picgo-2.0.gif" alt="img"></p><p>GitHub想必就不用做过多介绍了，一句话概括就是一个在线的代码托管平台。</p><p>Picgo支持很多的图床，比如七牛云，腾讯云等，这里我们介绍的是免费的GitHub。</p><h2 id="动手" tabindex="-1"><a class="header-anchor" href="#动手" aria-hidden="true">#</a> 动手</h2><h3 id="_1-安装picgo" tabindex="-1"><a class="header-anchor" href="#_1-安装picgo" aria-hidden="true">#</a> 1. 安装Picgo</h3><p>我选择的是2.4.0.beta版本，大家安装的时候可以选择稳定版，看个人喜好，喜欢尝试新功能的可以按照beta版，偏向于稳定的就安装稳定版。</p><p>2.3.1稳定版：https://github.com/Molunerfinn/PicGo/releases/tag/v2.3.1</p><p><img src="https://raw.githubusercontent.com/lianghexiang/picgo-picture/main/vuepressimage-20230729151038685.png" alt="image-20230729151038685"></p><p>其余的安装过程不再赘述，因为没什么特别需要注意的地方，傻瓜式安装就可以了，不想安装在C盘的注意更改安装目录。</p><h3 id="_2-github仓库" tabindex="-1"><a class="header-anchor" href="#_2-github仓库" aria-hidden="true">#</a> 2. GitHub仓库</h3><ol><li>先登录GitHub，点击 + ，点击创建仓库</li></ol><p><img src="https://raw.githubusercontent.com/lianghexiang/picgo-picture/main/vuepressimage-20230729164849247.png" alt="image-20230729164849247"></p><ol start="2"><li><p>创建仓库前配置好<code>名称</code>，<code>权限</code>，模板等，因为我们要在网络上访问，所以要选择<code>Public</code>.</p><p><img src="https://raw.githubusercontent.com/lianghexiang/picgo-picture/main/vuepressimage-20230729164838764.png" alt="image-20230729164838764"></p></li></ol><p>​ 创建成功后会跳转到仓库页面</p><p><img src="https://raw.githubusercontent.com/lianghexiang/picgo-picture/main/vuepressimage-20230729164829442.png" alt="image-20230729164829442"></p><ol start="3"><li><p>生成token</p><p>token是用来验证用户身份的表示，所以要自己揣兜里，不要让别人看到。</p><p>点击右上角的头像</p><p><img src="https://raw.githubusercontent.com/lianghexiang/picgo-picture/main/vuepressimage-20230729164813237.png" alt="image-20230729164813237"></p><p>然后点击Settings</p><p><img src="https://raw.githubusercontent.com/lianghexiang/picgo-picture/main/vuepressimage-20230729164803602.png" alt="image-20230729164803602"></p><p>在左侧导航栏的最下方找到<code>Developer settings</code>,然后点击，-&gt;</p></li></ol><p><img src="https://raw.githubusercontent.com/lianghexiang/picgo-picture/main/vuepressimage-20230729164654737.png" alt="image-20230729164654737"></p><p>跳转到如下页面-&gt;</p><p><img src="https://raw.githubusercontent.com/lianghexiang/picgo-picture/main/vuepressimage-20230729152822569.png" alt="image-20230729152822569"></p><p>然后，设置过期时间，权限等 -&gt;</p><p><img src="https://raw.githubusercontent.com/lianghexiang/picgo-picture/main/vuepressimage-20230729164637962.png" alt="image-20230729164637962"></p><p>最后，划到页面最底部，点击生成token：*************</p><p><img src="https://raw.githubusercontent.com/lianghexiang/picgo-picture/main/vuepressimage-20230729153248698.png" alt="image-20230729153248698"></p><p><strong>注意:这个token只能查看一次，如果离开这个页面在返回就看不到了, 所以先保存好token</strong></p><h3 id="_3-配置picgo" tabindex="-1"><a class="header-anchor" href="#_3-配置picgo" aria-hidden="true">#</a> 3. 🛠️配置PicGo</h3><p>打开PicGo</p><p>点击图床设置，我们可以看到GitHub</p><p><img src="https://raw.githubusercontent.com/lianghexiang/picgo-picture/main/vuepressimage-20230729155924896.png" alt="image-20230729155924896"></p><p>1️⃣：图床配置名</p><blockquote><p>可以自己随便命名</p></blockquote><p>2️⃣: 设置仓库名</p><blockquote><p>用户名/仓库名</p></blockquote><p>3️⃣:设置分支名</p><blockquote><p>一般都为main</p></blockquote><p>4️⃣: 设置token</p><blockquote><p>这里就要用到我们之前创建仓库之后设置的token了，将它填进去即可</p></blockquote><p>5️⃣: 设置存储路径</p><blockquote><p>默认的话会上传的仓库的根目录，也就是/，如果我们想要上传到仓库的某个目录下，就需要填写目录名称，并且以/结尾</p><p>比如我想上传到仓库下的blog目录下，这里就填写<code>blog/</code></p></blockquote><p>6️⃣: 设置自定义域名</p><blockquote><p>我这里没有用到自定义域名，如果读者有需要的话可以问问度娘</p></blockquote><p>配置完之后，在上传区选中GitHub</p><p><img src="https://raw.githubusercontent.com/lianghexiang/picgo-picture/main/vuepressimage-20230729162854239.png" alt="image-20230729162854239"></p><p>到此Picgo和GitHub的图床已经配置完成了，接下来就可以快乐的将图片上传到GitHub，然后获取到链接，在远程来访问我们的图片啦。</p><h3 id="_4-typora" tabindex="-1"><a class="header-anchor" href="#_4-typora" aria-hidden="true">#</a> 4. Typora</h3><p>另外，经常使用Typora的小伙伴也可以通过Typora的偏好设置来将我们本地的图片通过PicGo来自动上传到仓库中啦</p><ol><li>点开Typora导航栏中的文件</li></ol><p><img src="https://raw.githubusercontent.com/lianghexiang/picgo-picture/main/vuepressimage-20230729163642417.png" alt="image-20230729163642417"></p><ol start="2"><li><p>在偏好设置中配置PicGo</p><p><img src="https://raw.githubusercontent.com/lianghexiang/picgo-picture/main/vuepressimage-20230729164404631.png" alt="image-20230729164404631"></p></li></ol>',57),c=[o];function g(n,r){return e(),p("div",null,c)}const h=i(a,[["render",g],["__file","Picgo_GitHub.html.vue"]]);export{h as default};
